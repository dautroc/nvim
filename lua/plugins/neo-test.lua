return {
	"nvim-neotest/neotest",
	dependencies = {
		"mfussenegger/nvim-dap",
		"olimorris/neotest-rspec",
		"nvim-neotest/nvim-nio",
		"nvim-lua/plenary.nvim",
		"antoinemadec/FixCursorHold.nvim",
		"nvim-treesitter/nvim-treesitter",
	},
	keys = {
    -- Main test commands
		{ "<leader>tf", "<cmd>lua require('neotest').run.run(vim.fn.expand('%'))<cr>", desc = "Test file" },
		{ "<leader>tn", "<cmd>lua require('neotest').run.run()<cr>", desc = "Test nearest" },
		{ "<leader>ta", "<cmd>lua require('neotest').run.attach()<cr>", desc = "Test attacth" },
		{ "<leader>ts", "<cmd>lua require('neotest').summary.toggle()<cr>", desc = "Test summary" },
		{ "<leader>to", "<cmd>lua require('neotest').output.open({ enter = true })<cr>", desc = "Open output" },
		{ "<leader>tp", "<cmd>lua require('neotest').output_panel.toggle()<cr>", desc = "Toggle output panel" },
		{ "<leader>tc", "<cmd>lua require('neotest').output_panel.clear()<cr>", desc = "Clear output panel" },
		{ "<leader>tl", "<cmd>lua require('neotest').run.run_last()<cr>", desc = "Test last position" },
		{ "<leader>tg", "<cmd>lua require('neotest').run.get_last_run()<cr>", desc = "Get last run" },
		{ "<leader>tt", "<cmd>lua require('neotest').watch.toggle(vim.fn.expand('%'))<cr>", desc = "Toggle watch current file" },

    -- Jump
		{ "<leader>tk", "<cmd>lua require('neotest').jump.prev({status = 'failed'})<cr>", desc = "Jump bellow failed test" },
		{ "<leader>tj", "<cmd>lua require('neotest').jump.next({status = 'failed'})<cr>", desc = "Jump up failed test" },

    -- Test with dap
		{ "<leader>tdn", "<cmd>lua require('neotest').run.run({ vim.fn.expand('%'), strategy = 'dap' })<cr>", desc = "Test nearest with dap" },
		{ "<leader>tdl", "<cmd>lua require('neotest').run.run_last({ strategy = 'dap' })<cr>", desc = "Test last position with dap" },
	},
	config = function()
		require("neotest").setup({
			adapters = {
				require("neotest-rspec"),
			},
			benchmark = {
				enabled = true,
			},
			consumers = {},
			default_strategy = "integrated",
			diagnostic = {
				enabled = true,
				severity = 1,
			},
			discovery = {
				concurrent = 0,
				enabled = true,
			},
			floating = {
				border = "rounded",
				max_height = 0.6,
				max_width = 0.6,
				options = {},
			},
			highlights = {
				adapter_name = "NeotestAdapterName",
				border = "NeotestBorder",
				dir = "NeotestDir",
				expand_marker = "NeotestExpandMarker",
				failed = "NeotestFailed",
				file = "NeotestFile",
				focused = "NeotestFocused",
				indent = "NeotestIndent",
				marked = "NeotestMarked",
				namespace = "NeotestNamespace",
				passed = "NeotestPassed",
				running = "NeotestRunning",
				select_win = "NeotestWinSelect",
				skipped = "NeotestSkipped",
				target = "NeotestTarget",
				test = "NeotestTest",
				unknown = "NeotestUnknown",
				watching = "NeotestWatching",
			},
			icons = {
				child_indent = "│",
				child_prefix = "├",
				collapsed = "─",
				expanded = "╮",
				failed = "",
				final_child_indent = " ",
				final_child_prefix = "╰",
				non_collapsible = "─",
				notify = "",
				passed = "",
				running = "",
				running_animated = { "/", "|", "\\", "-", "/", "|", "\\", "-" },
				skipped = "",
				unknown = "",
				watching = "",
			},
			jump = {
				enabled = true,
			},
			log_level = 3,
			output = {
				enabled = true,
				open_on_run = "short",
			},
			output_panel = {
				enabled = true,
				open = "botright split | resize 15",
			},
			projects = {},
			quickfix = {
				enabled = true,
				open = false,
			},
			run = {
				enabled = true,
			},
			running = {
				concurrent = true,
			},
			state = {
				enabled = true,
			},
			status = {
				enabled = true,
				signs = true,
				virtual_text = false,
			},
			strategies = {
				integrated = {
					height = 40,
					width = 120,
				},
			},
			summary = {
				animated = true,
				count = true,
				enabled = true,
				expand_errors = true,
				follow = true,
				mappings = {
					attach = "a",
					clear_marked = "M",
					clear_target = "T",
					debug = "d",
					debug_marked = "D",
					expand = { "<CR>", "<2-LeftMouse>" },
					expand_all = "e",
					help = "?",
					jumpto = "i",
					mark = "m",
					next_failed = "J",
					output = "o",
					prev_failed = "K",
					run = "r",
					run_marked = "R",
					short = "O",
					stop = "u",
					target = "t",
					watch = "w",
				},
				open = "botright vsplit | vertical resize 50",
			},
		})
	end,
}
